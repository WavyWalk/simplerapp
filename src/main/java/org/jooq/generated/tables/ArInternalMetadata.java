/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.tables.records.ArInternalMetadataRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArInternalMetadata extends TableImpl<ArInternalMetadataRecord> {

    private static final long serialVersionUID = -212368541;

    /**
     * The reference instance of <code>ar_internal_metadata</code>
     */
    public static final ArInternalMetadata AR_INTERNAL_METADATA = new ArInternalMetadata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ArInternalMetadataRecord> getRecordType() {
        return ArInternalMetadataRecord.class;
    }

    /**
     * The column <code>ar_internal_metadata.key</code>.
     */
    public final TableField<ArInternalMetadataRecord, String> KEY = createField(DSL.name("key"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>ar_internal_metadata.value</code>.
     */
    public final TableField<ArInternalMetadataRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>ar_internal_metadata.created_at</code>.
     */
    public final TableField<ArInternalMetadataRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>ar_internal_metadata.updated_at</code>.
     */
    public final TableField<ArInternalMetadataRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>ar_internal_metadata</code> table reference
     */
    public ArInternalMetadata() {
        this(DSL.name("ar_internal_metadata"), null);
    }

    /**
     * Create an aliased <code>ar_internal_metadata</code> table reference
     */
    public ArInternalMetadata(String alias) {
        this(DSL.name(alias), AR_INTERNAL_METADATA);
    }

    /**
     * Create an aliased <code>ar_internal_metadata</code> table reference
     */
    public ArInternalMetadata(Name alias) {
        this(alias, AR_INTERNAL_METADATA);
    }

    private ArInternalMetadata(Name alias, Table<ArInternalMetadataRecord> aliased) {
        this(alias, aliased, null);
    }

    private ArInternalMetadata(Name alias, Table<ArInternalMetadataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ArInternalMetadata(Table<O> child, ForeignKey<O, ArInternalMetadataRecord> key) {
        super(child, key, AR_INTERNAL_METADATA);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public ArInternalMetadata as(String alias) {
        return new ArInternalMetadata(DSL.name(alias), this);
    }

    @Override
    public ArInternalMetadata as(Name alias) {
        return new ArInternalMetadata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ArInternalMetadata rename(String name) {
        return new ArInternalMetadata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ArInternalMetadata rename(Name name) {
        return new ArInternalMetadata(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
